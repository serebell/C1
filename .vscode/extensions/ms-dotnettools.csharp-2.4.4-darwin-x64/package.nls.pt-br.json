{
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": "Mostrar dicas para a criação de objeto implícito",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": "Mostrar as dicas para as variáveis com tipos inferidos",
  "configuration.csharp.inlayHints.enableInlayHintsForIndexerParameters": "Mostrar dicas para indexadores",
  "configuration.csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": "Mostrar as dicas para os tipos de parâmetro lambda",
  "configuration.csharp.inlayHints.enableInlayHintsForTypes": "Exibir as dicas embutidas de tipo",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "Execute a análise de código em segundo plano para: (Anteriormente `omnisharp.enableRoslynAnalyzers`)",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.fullSolution": "Solução inteira",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.none": "Nenhum",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.openFiles": "Abrir documentos",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope": "Mostrar erros e alertas do compilador para:",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.fullSolution": "Solução inteira",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.none": "Nenhum",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.openFiles": "Abrir documentos",
  "configuration.dotnet.codeLens.enableReferencesCodeLens": "Especifica se as referências CodeLens devem ser mostradas. (Anteriormente `csharp.referencesCodeLens.enabled`)",
  "configuration.dotnet.codeLens.enableTestsCodeLens": "Especifica se o teste de execução e depuração CodeLens deve ser mostrado. (Anteriormente `csharp.testsCodeLens.enabled`)",
  "configuration.dotnet.completion.provideRegexCompletions": "Mostrar expressões regulares na lista de conclusão.",
  "configuration.dotnet.completion.showCompletionItemsFromUnimportedNamespaces": "Habilita o suporte para mostrar tipos e métodos de extensão não importados em listas de conclusão. Quando confirmado, a diretiva using apropriada será adicionada no topo do arquivo atual. (Anteriormente `omnisharp.enableImportCompletion`)",
  "configuration.dotnet.completion.showNameCompletionSuggestions": "Execute a conclusão automática do nome do objeto para os membros que você selecionou recentemente.",
  "configuration.dotnet.defaultSolution.description": "O caminho da solução padrão a ser aberta no workspace ou definido como 'desabilitado' para ignorá-la. (Anteriormente `omnisharp.defaultLaunchSolution`)",
  "configuration.dotnet.dotnetPath": "Especifica o caminho para um diretório de instalação dotnet a ser usado em vez do sistema padrão. Isso influencia apenas a instalação do dotnet a ser usada para hospedar o próprio servidor de idiomas. Exemplo: \"/home/username/mycustomdotnetdirectory\".",
  "configuration.dotnet.highlighting.highlightRelatedJsonComponents": "Destaque os componentes JSON relacionados sob o cursor.",
  "configuration.dotnet.highlighting.highlightRelatedRegexComponents": "Destaque os componentes de expressão regular relacionados sob o cursor.",
  "configuration.dotnet.implementType.insertionBehavior": "O local de inserção de propriedades, eventos e métodos Ao implementar interface ou classe abstrata.",
  "configuration.dotnet.implementType.insertionBehavior.atTheEnd": "Coloque-os no final.",
  "configuration.dotnet.implementType.insertionBehavior.withOtherMembersOfTheSameKind": "Coloque-os com outros membros do mesmo tipo.",
  "configuration.dotnet.implementType.propertyGenerationBehavior": "Comportamento de geração de propriedades ao implementar interface ou classe abstrata.",
  "configuration.dotnet.implementType.propertyGenerationBehavior.preferAutoProperties": "Eu prefiro propriedades automáticas.",
  "configuration.dotnet.implementType.propertyGenerationBehavior.preferThrowingProperties": "Eu prefiro lançar propriedades.",
  "configuration.dotnet.inlayHints.enableInlayHintsForLiteralParameters": "Mostrar as dicas para os literais",
  "configuration.dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": "Mostrar as dicas para as expressões 'new'",
  "configuration.dotnet.inlayHints.enableInlayHintsForOtherParameters": "Mostrar as dicas para tudo",
  "configuration.dotnet.inlayHints.enableInlayHintsForParameters": "Exibir dicas de nomes de parâmetros embutidos",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": "Suprimir as dicas quando os nomes de parâmetros diferirem somente pelo sufixo",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": "Suprimir as dicas quando o argumento corresponder ao nome do parâmetro",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": "Suprimir as dicas quando o nome do parâmetro corresponder à intenção do método",
  "configuration.dotnet.navigation.navigateToDecompiledSources": "Habilite a navegação para fontes não compatíveis.",
  "configuration.dotnet.quickInfo.showRemarksInQuickInfo": "Mostrar informações de comentários ao exibir o símbolo.",
  "configuration.dotnet.server.extensionPaths": "Substituir o caminho para os argumentos --extension do servidor de idiomas",
  "configuration.dotnet.server.path": "Especifica o caminho absoluto para o executável do servidor (LSP ou O#). Quando deixado em branco, a versão fixada na extensão C# é usada. (Anteriormente `omnisharp.path`)",
  "configuration.dotnet.server.trace": "Define o nível de log para o servidor de idiomas",
  "configuration.dotnet.server.waitForDebugger": "Passa o sinalizador --debug ao iniciar o servidor para permitir que um depurador seja anexado. (Anteriormente `omnisharp.waitForDebugger`)",
  "configuration.dotnet.symbolSearch.searchReferenceAssemblies": "Pesquisar símbolos em montagens de referência. Afeta os recursos que exigem pesquisa de símbolos, como adicionar importações.",
  "configuration.dotnet.unitTestDebuggingOptions": "Opções a serem usadas com o depurador ao iniciar a depuração de teste de unidade. (Anteriormente `csharp.unitTestDebuggingOptions`)",
  "configuration.razor.languageServer.debug": "Especifica se é preciso aguardar o anexo de depuração ao iniciar o servidor de linguagem.",
  "configuration.razor.languageServer.directory": "Substitui o caminho para o diretório do Servidor de Linguagem Razor.",
  "configuration.razor.trace": "Especifica se devem ser enviadas todas [Verbose], algumas [Mensagens] ou nenhuma [Desativado] mensagem.",
  "configuration.razor.trace.messages": "Registra apenas algumas mensagens da extensão do Razor",
  "configuration.razor.trace.off": "Não registra as mensagens da extensão do Razor",
  "configuration.razor.trace.verbose": "Registra todas as mensagens da extensão do Razor",
  "debuggers.dotnet.launch.launchConfigurationId.description": "A ID de configuração de inicialização a ser usada. A cadeia de caracteres vazia usará a configuração ativa atual.",
  "debuggers.dotnet.launch.projectPath.description": "Caminho para o arquivo .csproj.",
  "generateOptionsSchema.allowFastEvaluate.description": "Quando verdadeiro (o estado padrão), o depurador tentará uma avaliação mais rápida simulando a execução de propriedades e métodos simples.",
  "generateOptionsSchema.args.0.description": "Argumentos de linha de comando passados para o programa.",
  "generateOptionsSchema.args.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passada para o programa.",
  "generateOptionsSchema.checkForDevCert.description": "Se você estiver iniciando um projeto da Web no Windows ou macOS e isso estiver habilitado, o depurador verificará se o computador possui um certificado HTTPS autoassinado usado para desenvolver servidores da Web em execução em pontos de extremidade https. Se não especificado, o padrão é verdadeiro quando `serverReadyAction` é definido. Esta opção não faz nada no Linux, VS Code remoto e cenários de IU da Web do VS Code. Se o certificado HTTPS não for encontrado ou não for confiável, o usuário será solicitado a instalá-lo/confiar nele.",
  "generateOptionsSchema.console.externalTerminal.enumDescription": "Terminal externo que pode ser configurado através das configurações do usuário.",
  "generateOptionsSchema.console.integratedTerminal.enumDescription": "Terminal integrado do VS Code.",
  "generateOptionsSchema.console.internalConsole.enumDescription": "Saída para o console de depuração do VS Code. Isso não suporta leitura de entrada do console (ex:Console.ReadLine).",
  "generateOptionsSchema.console.markdownDescription": "Ao iniciar projetos de console, indica em qual console o programa de destino deve ser iniciado.",
  "generateOptionsSchema.console.settingsDescription": "**Observação:** _Esta opção é usada apenas para o tipo de configuração de depuração `dotnet`_.\r\n\r\nAo iniciar projetos de console, indica em qual console o programa de destino deve ser iniciado.",
  "generateOptionsSchema.cwd.description": "Caminho para o diretório de trabalho do programa que está sendo depurado. O padrão é o espaço de trabalho atual.",
  "generateOptionsSchema.enableStepFiltering.markdownDescription": "Sinalizador para habilitar o passo a passo sobre Propriedades e Operadores. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.env.description": "Variáveis de ambiente passadas para o programa.",
  "generateOptionsSchema.envFile.markdownDescription": "Variáveis de ambiente passadas para o programa por um arquivo. Por exemplo. `${workspaceFolder}/.env`",
  "generateOptionsSchema.externalConsole.markdownDescription": "O atributo `externalConsole` está preterido, use `console` em seu lugar. Esta opção padrão é `false`.",
  "generateOptionsSchema.justMyCode.markdownDescription": "Quando habilitado (o padrão), o depurador apenas exibe e avança no código do usuário (\"Meu Código\"), ignorando o código do sistema e outro código otimizado ou que não possui símbolos de depuração. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson#just-my-code)",
  "generateOptionsSchema.launchBrowser.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Isso é usado apenas se o elemento específico da plataforma (`osx`, `linux` ou `windows`) não especificar um valor para `args`. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.description": "Descreve as opções para iniciar um navegador da Web como parte do lançamento",
  "generateOptionsSchema.launchBrowser.enabled.description": "Se a inicialização do navegador da web está habilitada. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.launchBrowser.linux.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.linux.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.linux.description": "Opções de configuração de inicialização da Web específicas do Linux. Por padrão, isso iniciará o navegador usando `xdg-open`.",
  "generateOptionsSchema.launchBrowser.osx.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.osx.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.osx.description": "Opções de configuração de inicialização da Web específicas do OSX. Por padrão, isso iniciará o navegador usando `open`.",
  "generateOptionsSchema.launchBrowser.windows.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.windows.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.windows.description": "Opções de configuração de inicialização da Web específicas do Windows. Por padrão, isso iniciará o navegador usando `cmd /c start`.",
  "generateOptionsSchema.launchSettingsFilePath.markdownDescription": "O caminho para um arquivo launchSettings.json. Se isso não for definido, o depurador irá procurar em `{cwd}/Properties/launchSettings.json`.",
  "generateOptionsSchema.launchSettingsProfile.description": "Se especificado, indica o nome do perfil em launchSettings.json a ser usado. Isso será ignorado se launchSettings.json não for encontrado. launchSettings.json será lido a partir do caminho especificado deve ser a propriedade 'launchSettingsFilePath' ou {cwd}/Properties/launchSettings.json se isso não estiver definido. Se for definido como null ou uma cadeia de caracteres vazia, launchSettings.json será ignorado. Se este valor não for especificado, o primeiro perfil 'Projeto' será usado.",
  "generateOptionsSchema.logging.browserStdOut.markdownDescription": "Sinalize para determinar se o texto stdout da inicialização do navegador da Web deve ser registrado na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.description": "Sinalizadores para determinar quais tipos de mensagens devem ser registrados na janela de saída.",
  "generateOptionsSchema.logging.elapsedTiming.markdownDescription": "Se verdadeiro, o registro do mecanismo incluirá as propriedades `adapterElapsedTime` e `engineElapsedTime` para indicar a quantidade de tempo, em microssegundos, que uma solicitação levou. Esta opção padrão é `false`.",
  "generateOptionsSchema.logging.engineLogging.markdownDescription": "Sinalize para determinar se os logs do mecanismo de diagnóstico devem ser registrados na janela de saída. Esta opção padrão é `false`.",
  "generateOptionsSchema.logging.exceptions.markdownDescription": "Sinalize para determinar se as mensagens de exceção devem ser registradas na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.moduleLoad.markdownDescription": "Sinalizador para determinar se os eventos de carregamento do módulo devem ser registrados na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.processExit.markdownDescription": "Controla se uma mensagem é registrada quando o processo de destino sai ou a depuração é interrompida. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.programOutput.markdownDescription": "Sinalizador para determinar se a saída do programa deve ser registrada na janela de saída quando não estiver usando um console externo. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.threadExit.markdownDescription": "Controla se uma mensagem é registrada quando um thread no processo de destino sai. Esta opção padrão é `false`.",
  "generateOptionsSchema.pipeTransport.debuggerPath.description": "O caminho completo para o depurador na máquina de destino.",
  "generateOptionsSchema.pipeTransport.description": "Quando presente, informa ao depurador para se conectar a um computador remoto usando outro executável como um pipe que retransmitirá a entrada/saída padrão entre o VS Code e o executável de back-end do depurador .NET Core (vsdbg).",
  "generateOptionsSchema.pipeTransport.linux.description": "Opções de configuração de inicialização de pipe específicas do Linux",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.linux.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.linux.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.linux.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.linux.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.osx.description": "Opções de configuração de inicialização de pipe específicas do OSX",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.osx.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.osx.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.osx.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.osx.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.windows.description": "Opções de configuração de inicialização de pipe específicas do Windows",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.windows.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.windows.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.windows.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.windows.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.processId.0.markdownDescription": "O ID do processo ao qual anexar. Use \"\" para obter uma lista de processos em execução aos quais anexar. Se `processId` for usado, `processName` não deve ser usado.",
  "generateOptionsSchema.processId.1.markdownDescription": "O ID do processo ao qual anexar. Use \"\" para obter uma lista de processos em execução aos quais anexar. Se `processId` for usado, `processName` não deve ser usado.",
  "generateOptionsSchema.processName.markdownDescription": "O nome do processo ao qual anexar. Se for usado, `processId` não deve ser usado.",
  "generateOptionsSchema.program.markdownDescription": "Caminho para a dll do aplicativo ou o executável do host do .NET Core a ser iniciado.\r\nEsta propriedade normalmente assume o formato: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\r\n\r\nExemplo: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\r\n\r\nOnde:\r\n'(target-framework)' é a estrutura para a qual o projeto depurado está sendo compilado. Normalmente, isso é encontrado no arquivo de projeto como a propriedade 'TargetFramework'.\r\n\r\n'(project-name.dll)' é o nome da dll de saída de build do projeto depurado. Normalmente, é o mesmo que o nome do arquivo de projeto, mas com uma '.dll' extensão.",
  "generateOptionsSchema.requireExactSource.markdownDescription": "Sinalize para exigir que o código-fonte atual corresponda ao pdb. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.sourceFileMap.markdownDescription": "Mapeia caminhos de tempo de construção para locais de origem local. Todas as instâncias do caminho de tempo de compilação serão substituídas pelo caminho de origem local.\r\n\r\nExemplo:\r\n\r\n`{\"<build-path>\":\"<local-source-path>\"}`",
  "generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription": "O Source Link está habilitado para este URL? Se não for especificado, esta opção assume como padrão `true`.",
  "generateOptionsSchema.sourceLinkOptions.markdownDescription": "Opções para controlar como o Source Link se conecta aos servidores da web. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson#source-link-options)",
  "generateOptionsSchema.stopAtEntry.markdownDescription": "Se verdadeiro, o depurador deve parar no ponto de entrada do destino. Esta opção padrão é `false`.",
  "generateOptionsSchema.suppressJITOptimizations.markdownDescription": "Se verdadeiro, quando um módulo otimizado (.dll compilado na configuração do Release) for carregado no processo de destino, o depurador solicitará ao compilador Just-In-Time que gere código com as otimizações desativadas. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations)",
  "generateOptionsSchema.symbolOptions.cachePath.description": "Diretório onde os símbolos baixados dos servidores de símbolos devem ser armazenados em cache. Se não for especificado, no Windows, o depurador será padronizado como %TEMP%\\SymbolCache, e no Linux e macOS, o depurador será padronizado como ~/.dotnet/symbolcache.",
  "generateOptionsSchema.symbolOptions.description": "Opções para controlar como os símbolos (arquivos .pdb) são encontrados e carregados.",
  "generateOptionsSchema.symbolOptions.moduleFilter.description": "Fornece opções para controlar para quais módulos (arquivos .dll) o depurador tentará carregar símbolos (arquivos .pdb).",
  "generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description": "Matriz de módulos para a qual o depurador NÃO deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\r\n\r\nEssa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadAllButExcluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description": "Se for verdadeira, para qualquer módulo NOT na matriz 'includedModules', o depurador ainda verificará ao lado do próprio módulo e do executável de inicialização, mas não verificará os caminhos na lista de pesquisa de símbolo. Esta opção é padronizada como 'true'.\r\n\r\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description": "Matriz de módulos para a qual o depurador deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\r\n\r\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.description": "Controla em quais dos dois modos operacionais básicos o filtro de módulo opera.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription": "Carregue símbolos para todos os módulos, a menos que o módulo esteja na matriz 'excludedModules'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription": "Não tente carregar símbolos para o módulo ANY, a menos que ele esteja na matriz 'includedModules' ou seja incluído por meio da configuração 'includeSymbolsNextToModules'.",
  "generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description": "Se for 'true', o servidor de Símbolos da Microsoft (https\u200b://msdl.microsoft.com\u200b/download/symbols) será adicionado ao caminho de pesquisa de símbolos. Se não for especificado, essa opção usará como padrão 'false'.",
  "generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description": "Se 'true', o servidor de símbolos NuGet.org (https\u200b://symbols.nuget.org\u200b/download/symbols) é adicionado ao caminho de pesquisa de símbolos. Se não for especificado, esta opção assume como padrão 'false'.",
  "generateOptionsSchema.symbolOptions.searchPaths.description": "Matriz de URLs do servidor de símbolos (exemplo: http\u200b://MyExampleSymbolServer) ou diretórios (exemplo: /build/symbols) para pesquisar arquivos .pdb. Esses diretórios serão pesquisados além dos locais padrão, ao lado do módulo e do caminho em que o pdb foi removido originalmente.",
  "generateOptionsSchema.targetArchitecture.markdownDescription": "[Com suporte apenas na depuração local do macOS]\r\n\r\nA arquitetura do depurado. Isso será detectado automaticamente, a menos que esse parâmetro seja definido. Os valores permitidos são `x86_64` ou `arm64`.",
  "generateOptionsSchema.targetOutputLogPath.description": "Quando definido, o texto que o aplicativo de destino grava em stdout e stderr (ex: Console.WriteLine) será salvo no arquivo especificado. Essa opção será ignorada se o console for definido como algo diferente de internalConsole. Por exemplo. '${workspaceFolder}/out.txt'",
  "viewsWelcome.debug.contents": "[Gerar ativos C# para Build e Depuração](command:dotnet.generateAssets)\r\n\r\nPara saber mais sobre launch.json, consulte [Como configurar launch.json para depuração C#](https://aka.ms/VSCode-CS-LaunchJson)."
}